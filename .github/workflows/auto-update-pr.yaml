name: Auto Update Approved PRs with Conflict Handling

on:
  push:
    branches:
      - main # Sostituisci con il tuo branch base se diverso
  workflow_dispatch:

jobs:
  update-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Necessario per operazioni di rebase

      - name: Install GitHub CLI
        uses: cli/cli-action@v2

      - name: Fetch All Branches
        run: git fetch --all

      - name: Get List of Open PRs
        id: get_open_prs
        run: |
          gh pr list --state open --json number,headRefName,baseRefName,isDraft,mergeable --jq '.[] | select(.baseRefName == "main" and .mergeable == "MERGEABLE") | .number' > pr_numbers.txt

      - name: Check PR Reviews and Handle Conflicts
        id: check_pr_reviews_and_conflicts
        run: |
          for pr in $(cat pr_numbers.txt); do
            reviews=$(gh pr view $pr --json reviews --jq '.reviews[] | select(.state == "APPROVED")')
            if [ -n "$reviews" ]; then
              echo "PR #$pr has approved reviews."

              # Check for conflicts during rebase
              branch_name=$(gh pr view $pr --json headRefName --jq '.headRefName')
              git checkout $branch_name
              git fetch origin
              git rebase origin/main
              if [ $? -eq 0 ]; then
                echo "PR #$pr rebase successful."
                echo $pr >> approved_pr_numbers.txt
              else
                echo "PR #$pr has conflicts. Skipping rebase."
              fi
            else
              echo "PR #$pr does not have approved reviews."
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rebase Approved PRs on Main
        if: fileExists('approved_pr_numbers.txt')
        run: |
          while read -r pr; do
            echo "Updating PR #$pr..."
            branch_name=$(gh pr view $pr --json headRefName --jq '.headRefName')
            git checkout $branch_name
            git rebase origin/main
            git push --force-with-lease
          done < approved_pr_numbers.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
