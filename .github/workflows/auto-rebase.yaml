name: Auto Rebase

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  rebase:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch completo per avere tutta la cronologia

      - name: Set GH_TOKEN environment variable
        run: echo "GH_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch open pull requests
        run: |
          gh auth setup-git
          gh pr list --state open --json number,headRepositoryOwner,headRefName --jq '.[] | "\(.number) \(.headRepositoryOwner.login) \(.headRefName)"' > pr_details.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rebase pull requests
        run: |
          while read pr_number pr_owner pr_branch; do
            echo "Processing PR #$pr_number"

            # Add the contributor's fork as a remote
            git remote add contributor https://github.com/$pr_owner/$(gh repo view --json name -q '.name').git

            # Fetch the contributor's branches
            git fetch contributor

            # Checkout the branch from the contributor's fork
            git checkout -b contributor-branch contributor/$pr_branch

            # Rebase the branch on top of the main branch
            git fetch origin main
            git rebase origin/main || {
              echo "Conflict detected. Aborting rebase and continuing."
              git rebase --abort
              continue
            }

            # Push the rebased branch back to the contributor's fork
            git push --force-with-lease contributor contributor-branch:$pr_branch

            # Remove the remote
            git remote remove contributor
          done < pr_details.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
